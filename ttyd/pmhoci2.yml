
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ttyd-pmhoci2
spec:
  selector:
    matchLabels:
      app: ttyd-pmhoci2
  template:
    metadata:
      labels:
        app: ttyd-pmhoci2
    spec:
      nodeName: pmhoci2
      containers:
      - name: ttyd
        image: ghcr.io/pmh-only/ttyd:latest
        ports:
        - containerPort: 7681
        volumeMounts:
        - name: ttyd-secret
          mountPath: "/root/.ssh"
          readOnly: true
      volumes:
      - name: ttyd-secret
        secret:
          secretName: ttyd-secret
          items:
          - key: id_ed25519
            path: id_ed25519
            mode: 0600
---
apiVersion: v1
kind: Service
metadata:
  name: ttyd-pmhoci2-service
spec:
  selector:
    app: ttyd-pmhoci2
  ports:
    - protocol: TCP
      port: 7681
      targetPort: 7681
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ttyd-pmhoci2-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-url: |-
      http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: |-
      https://pmhoci2.host.pmh.codes/outpost.goauthentik.io/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
      Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |-
      proxy_set_header X-Forwarded-Host $http_host;
spec:
  ingressClassName: nginx
  rules:
  - host: pmhoci2.host.pmh.codes
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ttyd-pmhoci2-service
            port:
              number: 7681

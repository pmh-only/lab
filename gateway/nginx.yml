apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-nginx-config
  namespace: gateway
data:
  nginx.conf: |
    worker_processes auto;
    events { worker_connections 1024; }

    http {
      include /usr/local/openresty/nginx/conf/mime.types;
      default_type application/octet-stream;
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;

      server_tokens off;
      more_clear_headers Server;

      access_log off;
      error_log /dev/stderr warn;

      client_max_body_size 0;
      ssl_certificate     /etc/nginx/tls/tls.crt;
      ssl_certificate_key /etc/nginx/tls/tls.key;

      ssl_protocols TLSv1.2 TLSv1.3;
      ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
      ssl_conf_command Ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256;
      ssl_ecdh_curve secp384r1;

      ssl_prefer_server_ciphers on;

      ssl_session_timeout 1d;
      ssl_session_cache shared:SSL:10m;

      ssl_session_tickets off;
      ssl_early_data on;

      resolver kube-dns.kube-system.svc.cluster.local valid=30s;

      http2 on;

      http3 on;
      http3_hq on;
      quic_gso on;
      quic_retry on;

      gzip on;
      gzip_comp_level 5;
      gzip_min_length 256;
      gzip_proxied any;
      gzip_types
        text/plain text/css text/xml application/xml
        application/json application/javascript text/javascript
        application/manifest+json application/rss+xml image/svg+xml;
      
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;

      proxy_set_header Connection "";
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Accept-Encoding "";

      proxy_read_timeout 86400;
      proxy_send_timeout 86400;
      proxy_request_buffering off;
      proxy_http_version 1.1;

      server {
        listen  80 default_server;
        listen  [::]:80 default_server;

        server_name _;

        location / {
          return 301 https://$host$request_uri;
        }
      }

      server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        listen 443 quic reuseport;
        listen [::]:443 quic reuseport;
        
        server_name _;
        location / {
          proxy_pass https://ingress-ingress-nginx-controller.ingress.svc.cluster.local:443;
          proxy_ssl_verify off;
        }

        location /_gwhealthz {
          add_header Content-Type text/plain;
          return 200 "Nginx is running";
        }
      }
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gateway-nginx
  namespace: gateway
spec:
  selector:
    matchLabels:
      app: gateway-nginx
  template:
    metadata:
      labels:
        app: gateway-nginx
    spec:
      restartPolicy: Always
      containers:
        - name: nginx
          image: ghcr.io/pmh-only/nginx:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              hostPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              hostPort: 443
              protocol: TCP
            - name: http3
              containerPort: 443
              hostPort: 443
              protocol: UDP
          volumeMounts:
            - name: tls
              mountPath: /etc/nginx/tls
              readOnly: true
            - name: nginx-config
              mountPath: /usr/local/openresty/nginx/conf/nginx.conf
              subPath: nginx.conf
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /_gwhealthz
              port: 443
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /_gwhealthz
              port: 443
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: tls
          secret:
            secretName: gateway-tls-secret
            optional: false
        - name: nginx-config
          configMap:
            name: gateway-nginx-config

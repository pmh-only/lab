apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ingress
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_intercept_errors on;

      # bucket from Host header
      set_by_lua_block $bucket {
        local host = ngx.req.get_headers()["host"] or ""
        local m = ngx.re.match(host, "^(?<bucket>[^.]+)\\.pmh\\.codes$")
        local b = (m and m.bucket) or "www"

        if #b < 3 or b:sub(1, 4) == "xn--" then
          b = "a-" .. b
        end

        return b
      }
      
      more_set_input_headers 'Host: $bucket.s3.pmh.codes';
      rewrite ^/(.*)$ /$bucket/$1 break;
spec:
  ingressClassName: nginx
  rules:
  - host: pmh.codes
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9000
  - host: "*.pmh.codes"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-root-ingress
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_intercept_errors on;

      # bucket from Host header
      set_by_lua_block $bucket {
        local host = ngx.req.get_headers()["host"] or ""
        local m = ngx.re.match(host, "^(?<bucket>[^.]+)\\.pmh\\.codes$")
        local b = (m and m.bucket) or "www"

        if #b < 3 or b:sub(1, 4) == "xn--" then
          b = "a-" .. b
        end

        return b
      }

      more_set_input_headers 'Host: $bucket.s3.pmh.codes';
      rewrite ^ /$bucket/index.html break;

      # redirect error pages to main site
      error_page 403 =302 https://pmh.codes;
      error_page 404 =302 https://pmh.codes;
spec:
  ingressClassName: nginx
  rules:
  - host: pmh.codes
    http:
      paths:
      - path: /
        pathType: Exact
        backend:
          service:
            name: minio-service
            port:
              number: 9000
  - host: "*.pmh.codes"
    http:
      paths:
      - path: /
        pathType: Exact
        backend:
          service:
            name: minio-service
            port:
              number: 9000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-api-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: "s3.pmh.codes"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9000
  - host: "*.s3.pmh.codes"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9000

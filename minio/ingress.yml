apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ingress
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_intercept_errors on;

      if ($uri ~ "^/$") { 
        set $test A; 
      } 
    
      if ($host !~* minio.pmh.codes) { 
        set $test "${test}B"; 
      }
      
      if ($host !~* s3.pmh.codes) { 
        set $test "${test}C"; 
      }
      
      if ($uri !~ "^/\.within\.website") { 
        set $test "${test}D"; 
      }
      
      if ($uri ~ "^/\.within\.website\/x\/cmd\/anubis\/static\/img\/") { 
        set $test "${test}E"; 
      }

      set_by_lua_block $bucket {
        local host = ngx.req.get_headers()["host"]
        local reg = "^(?<bucket>[^.]+).pmh.codes$"
        local m = ngx.re.match(host, reg)

        if m == nil or m['bucket'] == nil then
          return "www"
        end

        if string.len(m['bucket']) < 3 or m['bucket']:sub(1, 4) == "xn--" then
          return "a-" .. m['bucket']
        end

        return m['bucket']
      }

      if ($test = BCD) {
        rewrite ^/(.*)$ /$bucket/$1 break;
      }

      if ($test = ABCD) {
        rewrite ^/$ /$bucket/index.html break;
        more_set_input_headers 'Host: $bucket.s3.pmh.codes';
        error_page 400 =302 https://pmh.codes;
        error_page 401 =302 https://pmh.codes;
        error_page 403 =302 https://pmh.codes;
        error_page 404 =302 https://pmh.codes;
      }

      if ($test = BCE) {
        return 301 $scheme://anubis-assets.pmh.codes/x$request_uri;
      }
spec:
  ingressClassName: nginx
  rules:
  - host: pmh.codes
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: anubis-minio-service
            port:
              number: 8080
  - host: "*.pmh.codes"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: anubis-minio-service
            port:
              number: 8080
  - host: "anubis-assets.pmh.codes"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9000
  - host: "s3.pmh.codes"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9000
  - host: minio.pmh.codes
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-console-service
            port:
              number: 9090

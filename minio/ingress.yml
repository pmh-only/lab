apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_intercept_errors on;

      if ($uri ~ "^/$") { 
        set $test A; 
      } 
    
      if ($host !~* minio.pmh.codes) { 
        set $test "${test}B"; 
      }
      
      if ($host !~* s3.pmh.codes) { 
        set $test "${test}C"; 
      }

      set_by_lua_block $bucket {
        local host = ngx.req.get_headers()["host"];
        local reg = "^(?<bucket>[^.]+)\.pmh\.codes$";
        local m = ngx.re.match(host, reg);
        return m['bucket'];
      }

      if ($test = BC) {
        more_set_input_headers 'Host: $bucket.s3.pmh.codes';
      }

      if ($test = ABC) {
        rewrite ^/$ /index.html break;
        more_set_input_headers 'Host: $bucket.s3.pmh.codes';
        error_page 400 =302 https://pmh.codes;
        error_page 401 =302 https://pmh.codes;
        error_page 403 =302 https://pmh.codes;
        error_page 404 =302 https://pmh.codes;
      }
spec:
  tls:
  - hosts:
    - '*.pmh.codes'
    secretName: minio-bucket-ingress-tls
  - hosts:
    - 'minio.pmh.codes'
    secretName: minio-home-ingress-tls
  ingressClassName: nginx
  rules:
  - host: "*.pmh.codes"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9000
  - host: minio.pmh.codes
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9001
